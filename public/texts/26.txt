Задача 26
1.	Спроектируйте базу данных Sale для автоматизации учета информации о продажах товаров в магазине. 
Для каждого товара должна храниться информация: 
•	Артикул товара (уникален, содержит только цифры);
•	название товара;
•	категория товара;
•	количество товара на складе. 
Кроме того, хранится информация обо всех продажах товаров:
•	номер продажи (уникален);
•	проданный товар;
•	количество проданного товара;
•	дата продажи товара.

В СУБД MS SQL SERVER, используя команды определения данных создать базу данных Создать таблицы Товар и Продажи, для каждой таблицы определив первичные ключи. Определить в подчиненной таблице внешний ключ. Создать связь между таблицами с помощью внешнего ключа, обеспечив каскадное удаление и обновление данных. (+1)
2.	Используя команды манипулирования данными, добавить в созданные таблицы по пять записей, таких чтобы результаты нижеперечисленных запросов содержали не менее одной записи. (+1)
3.	Используя команды языка SQL, выполнить следующие действия:
1)	Написать триггер, который при продаже товара автоматически уменьшает количество этого товара на складе.  (+2)
2)	Продемонстрировать работу триггера, добавив информацию о продаже товара.  (+1)
3)	Написать запрос для получения следующей информации (результаты выполнения запроса не должны быть пустыми): Выведите названия товаров, проданных магазином в текущем месяце. (+1)

-- 1. Создание БД и таблиц
CREATE DATABASE Sale;
GO
USE Sale;
GO

CREATE TABLE Товар (
    артикул INT PRIMARY KEY CHECK (артикул LIKE '[0-9]%'),
    название VARCHAR(255),
    категория VARCHAR(100),
    количество_на_складе INT
);
GO

CREATE TABLE Продажи (
    номер_продажи INT PRIMARY KEY,
    артикул_товара INT,
    количество INT,
    дата_продажи DATE,
    FOREIGN KEY (артикул_товара) REFERENCES Товар(артикул)
    ON DELETE CASCADE ON UPDATE CASCADE
);
GO


-- 2. Вставка данных (обеспечиваем данные для запроса текущего месяца)
INSERT INTO Товар (артикул, название, категория, количество_на_складе) VALUES
(1001, 'Ноутбук', 'Электроника', 10),
(1002, 'Стул', 'Мебель', 20),
(1003, 'Книга', 'Канцелярия', 50),
(1004, 'Телефон', 'Электроника', 15),
(1005, 'Стол', 'Мебель', 8);

INSERT INTO Продажи (номер_продажи, артикул_товара, количество, дата_продажи) VALUES
(1, 1001, 2, GETDATE()),  -- Продажа в текущем месяце
(2, 1002, 5, '2024-01-15'),
(3, 1003, 1, '2024-01-16'),
(4, 1004, 1, '2024-01-15'),
(5, 1005, 3, '2024-01-16');


-- 3. SQL-запросы

-- 1) Триггер для уменьшения количества товара на складе
GO
CREATE TRIGGER UpdateStock
ON Продажи
AFTER INSERT
AS
BEGIN
    UPDATE Товар
    SET количество_на_складе = количество_на_складе - inserted.количество
    FROM inserted
    WHERE Товар.артикул = inserted.артикул_товара;
END;
GO



-- 2) Демонстрация работы триггера (продаем существующий товар)
-- Должно уменьшиться количество Ноутбуков (артикул 1001)
SELECT * FROM Товар WHERE артикул = 1001; -- Смотрим количество до
INSERT INTO Продажи (номер_продажи, артикул_товара, количество, дата_продажи) VALUES (6, 1001, 3, GETDATE());
SELECT * FROM Товар WHERE артикул = 1001; -- Смотрим количество после


-- 3) Товары, проданные в текущем месяце
SELECT t.название
FROM Товар t
JOIN Продажи p ON t.артикул = p.артикул_товара
WHERE MONTH(p.дата_продажи) = MONTH(GETDATE()) AND YEAR(p.дата_продажи) = YEAR(GETDATE());