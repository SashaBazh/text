Задача 12
1.	  Спроектируйте  базу данных  Exams для автоматизации учета информации о приеме  экзаменов преподавателями.  Для каждого преподавателя должна храниться информация: 
•	Табельный номер преподавателя (уникален, содержит только цифры);
•	ФИО преподавателя;
•	Дата приема на работу;
•	Категория (первая, вторая, высшая).
Кроме того, хранится информация о приеме экзаменов преподавателями:
•	номер направления на сдачу экзамена (уникален)
•	преподаватель, который принимал экзамен;
•	ФИО учащегося;
•	сдаваемый предмет;
•	дата сдачи экзамена;
•	оценка.

В СУБД MY SQL, используя команды определения данных создать базу данных.  Создать таблицы Преподаватель и Экзамен, для каждой таблицы определив первичные ключи. Определить в подчиненной таблице внешний ключ. Создать связь между таблицами с помощью внешнего ключа, обеспечив каскадное удаление и обновление данных. (+1)
2.	Используя команды манипулирования данными, добавить в созданные таблицы по пять записей, таких чтобы результаты нижеперечисленных запросов содержали не менее одной записи. (+1)

3.	Используя команды языка SQL, выполнить следующие действия: 
1)	Создайте представление Преподаватели1, содержащее информацию о ФИО преподавателя, Категории преподавателя, Предмете и Дате сдачи экзамена. (+1)
2)	Создайте представление Ученики1, содержащее информацию ФИО учащегося, и его среднем балле за все сданные экзамены. (+1)
3)	Выберите из представления Преподаватели1 всю информацию о преподавателях, принимавших экзамен по дисциплине Базы данных. (+1)
4)	Выберите из представления Ученики1 всю информацию об учащихся с максимальным средним баллом. (+1)

-- 1. Создание БД и таблиц
CREATE DATABASE IF NOT EXISTS Exams;
USE Exams;

CREATE TABLE IF NOT EXISTS Преподаватель (
    табельный_номер INT PRIMARY KEY CHECK (табельный_номер REGEXP '^[0-9]+$'),
    ФИО VARCHAR(255) NOT NULL,
    дата_приема DATE,
    категория ENUM('первая', 'вторая', 'высшая')
);

CREATE TABLE IF NOT EXISTS Экзамен (
    номер_направления INT PRIMARY KEY,
    табельный_номер_преподавателя INT,
    ФИО_учащегося VARCHAR(255),
    предмет VARCHAR(100),
    дата_сдачи DATE,
    оценка INT,
    FOREIGN KEY (табельный_номер_преподавателя) REFERENCES Преподаватель(табельный_номер)
    ON DELETE CASCADE ON UPDATE CASCADE
);

-- 2. Вставка данных (пример)
INSERT INTO Преподаватель VALUES 
(101, 'Иванов А.А.', '2015-05-10', 'высшая'),
(102, 'Петрова Б.Б.', '2020-09-01', 'первая'),
(103, 'Сидоров В.В.', '2018-03-15', 'вторая'),
(104, 'Козлова Г.Г.', '2019-11-20', 'высшая'),
(105, 'Смирнов Д.Д.', '2022-01-05', 'первая');

INSERT INTO Экзамен VALUES 
(3001, 101, 'Студент1', 'Базы данных', CURDATE(), 5),
(3002, 102, 'Студент2', 'Математика', '2023-10-12', 4),
(3003, 103, 'Студент3', 'Физика', CURDATE(), 3),
(3004, 104, 'Студент4', 'Базы данных', '2023-09-25', 5),
(3005, 105, 'Студент5', 'Химия', CURDATE(), 4);

-- 3. SQL-запросы
-- 1) Представление Преподаватели1
CREATE VIEW Преподаватели1 AS
SELECT p.ФИО, p.категория, e.предмет, e.дата_сдачи
FROM Преподаватель p
JOIN Экзамен e ON p.табельный_номер = e.табельный_номер_преподавателя;

-- 2) Представление Ученики1
CREATE VIEW Ученики1 AS
SELECT ФИО_учащегося, AVG(оценка) AS средний_балл
FROM Экзамен
GROUP BY ФИО_учащегося;

-- 3) Экзамены по Базам данных
SELECT * FROM Преподаватели1 WHERE предмет = 'Базы данных';

-- 4) Ученики с максимальным баллом
SELECT * FROM Ученики1 
WHERE средний_балл = (SELECT MAX(средний_балл) FROM Ученики1);
