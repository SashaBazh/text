Задача 9
1.	Спроектируйте базу данных University для автоматизации учета информации о филиалах учебного заведения.
Учебное заведение имеет несколько филиалов. Для каждого филиала должна храниться следующая информация: 
•	номер филиала (уникален, содержит только цифры);
•	адрес;
•	дата последнего подтверждения государственной аккредитации. 
В учебном заведении хранится информация обо всех группах каждого из филиалов:
•	номер филиала, к которому относится группа;
•	Номер группы (имеет уникальное значение);
•	курс;
•	количество учащихся в группе.  
В СУБД MY SQL, используя команды определения данных создать базу данных. Создать таблицы Филиал и Группа, для каждой таблицы определив первичные ключи. Определить в подчиненной таблице внешний ключ. Создать связь между таблицами с помощью внешнего ключа, обеспечив каскадное удаление и обновление данных. (+1)
2.	Используя команды манипулирования данными, добавить в созданные таблицы по пять записей, таких чтобы результаты нижеперечисленных запросов содержали не менее одной записи. (+1)
  
3.	Написать  запросы для получения следующей информации (результаты выполнения запросов не должны быть пустыми):
1)	Выведите номер филиала, адрес филиала и номера всех групп не четвертого курса. (+1) 
2)	Выберите  номера филиалов, в которых среднее число учащихся больше 100. (+1)
3)	Выведите адреса и номера всех филиалов, которые подтвердили Государственную аккредитацию раньше всех. (+1)
4)	Выведите для каждого филиала его номер и количество групп первого курса. (+1) 

-- 1. Создание БД и таблиц
CREATE DATABASE University;
USE University;

CREATE TABLE Филиал (
    номер INT PRIMARY KEY CHECK (номер REGEXP '^[0-9]+$'),
    адрес VARCHAR(255),
    дата_аккредитации DATE
);


CREATE TABLE Группа (
    номер_группы INT PRIMARY KEY,
    номер_филиала INT,
    курс INT,
    количество_учащихся INT,
    FOREIGN KEY (номер_филиала) REFERENCES Филиал(номер)
    ON DELETE CASCADE ON UPDATE CASCADE
);


-- 2. Вставка данных (обеспечиваем непустые результаты для запросов)
INSERT INTO Филиал (номер, адрес, дата_аккредитации) VALUES
(1, 'ул. Ленина, 1', '2024-05-10'), -- Самая ранняя аккредитация
(2, 'пр. Мира, 5', '2024-11-15'),
(3, 'ул. Гагарина, 20', '2024-10-20'),
(4, 'ул. Пушкина, 7', '2024-01-05'), -- Самая ранняя аккредитация
(5, 'пр. Ленина, 15', '2024-09-22');



INSERT INTO Группа (номер_группы, номер_филиала, курс, количество_учащихся) VALUES
(101, 1, 3, 20),  -- Не 4 курс
(102, 1, 2, 150), -- Для среднего больше 100
(103, 1, 1, 200), -- 1 курс, для среднего больше 100
(201, 2, 1, 15), -- 1 курс
(202, 2, 4, 28), 
(301, 3, 3, 22), -- Не 4 курс
(401, 4, 2, 32), -- Не 4 курс
(402, 4, 1, 35), -- 1 курс
(501, 5, 3, 150); -- Не 4 курс, для среднего больше 100


-- 3. SQL-запросы

-- 1) Филиалы и группы не 4 курса
SELECT f.номер, f.адрес, g.номер_группы
FROM Филиал f
JOIN Группа g ON f.номер = g.номер_филиала
WHERE g.курс != 4;



-- 2) Филиалы со средним числом учащихся больше 100
SELECT номер_филиала
FROM Группа
GROUP BY номер_филиала
HAVING AVG(количество_учащихся) > 100;



-- 3) Филиалы с самой ранней аккредитацией
SELECT номер, адрес
FROM Филиал
WHERE дата_аккредитации = (SELECT MIN(дата_аккредитации) FROM Филиал);


-- 4) Количество групп 1 курса для каждого филиала
SELECT f.номер, COUNT(g.номер_группы) AS количество_групп_1_курса
FROM Филиал f
LEFT JOIN Группа g ON f.номер = g.номер_филиала AND g.курс = 1
GROUP BY f.номер;