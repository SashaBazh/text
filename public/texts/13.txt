-- 1. Создание БД и таблиц
CREATE DATABASE IF NOT EXISTS University;
USE University;

CREATE TABLE IF NOT EXISTS Филиал (
    номер INT PRIMARY KEY CHECK (номер REGEXP '^[0-9]+$'),
    адрес VARCHAR(255),
    дата_аккредитации DATE
);

CREATE TABLE IF NOT EXISTS Группа (
    номер_группы INT PRIMARY KEY,
    номер_филиала INT,
    курс INT,
    количество_учащихся INT,
    FOREIGN KEY (номер_филиала) REFERENCES Филиал(номер)
    ON DELETE CASCADE ON UPDATE CASCADE
);

-- 2. Вставка данных
INSERT INTO Филиал VALUES 
(1, 'ул. Ленина, 10', '2023-09-01'),
(2, 'пр. Мира, 5', '2023-11-15'),
(3, 'ул. Гагарина, 20', '2023-10-20');

INSERT INTO Группа VALUES 
(101, 1, 3, 25),
(102, 1, 2, 30),
(201, 2, 1, 20),
(202, 2, 4, 28),
(301, 3, 3, 22);

-- 3. SQL-запросы
-- 1) Представление Группы1
CREATE VIEW Группы1 AS
SELECT g.номер_группы, f.адрес, g.курс, g.количество_учащихся
FROM Группа g
JOIN Филиал f ON g.номер_филиала = f.номер;

-- 2) Представление Филиалы1
CREATE VIEW Филиалы1 AS
SELECT f.номер, f.адрес, SUM(g.количество_учащихся) AS общее_количество
FROM Филиал f
LEFT JOIN Группа g ON f.номер = g.номер_филиала
GROUP BY f.номер;

-- 3) Учащиеся 3-го курса
SELECT адрес, SUM(количество_учащихся) 
FROM Группы1 
WHERE курс = 3 
GROUP BY адрес;

-- 4) Филиалы с количеством ниже среднего
SELECT * FROM Филиалы1 
WHERE общее_количество < (SELECT AVG(общее_количество) FROM Филиалы1);
