Задача 29
1.	Спроектируйте базу данных Exams для автоматизации учета информации о приеме экзаменов преподавателями. 
Для каждого преподавателя должна храниться информация: 
•	Табельный номер преподавателя (уникален для каждого преподавателя)
•	ФИО преподавателя;
•	Дата приема на работу;
•	Категория;
•	Телефон преподавателя.

Кроме того, хранится информация о приеме экзаменов преподавателями:
•	номер направления на сдачу экзамена (уникален);
•	преподаватель, принимавший экзамен;
•	ФИО учащегося;
•	сдаваемый предмет;
•	дата сдачи экзамена;
•	отметка.
В СУБД  MS SQL SERVER,  используя команды определения данных создать базу данных.  Создать таблицы Преподаватель и Экзамен, для каждой таблицы определив первичные ключи. Определить в подчиненной таблице внешний ключ. Создать связь между таблицами с помощью внешнего ключа, обеспечив каскадное удаление и обновление данных. (+1)
2.	Используя команды манипулирования данными, добавить в созданные таблицы по пять записей, таких чтобы результаты нижеперечисленных запросов содержали не менее одной записи. (+1)
  
3.	Написать  запросы для получения следующей информации (результаты выполнения запросов не должны быть пустыми):
1)	Сведения о ФИО преподавателях, ФИО учащихся и отметках, полученных на экзамене в порядке возрастания их значений. (+1)
2)	Вывести ФИО учащегося и средний балл, за экзамены, которые он сдавал. (+1)
3)	Вывести в алфавитном порядке фамилии и дату приема на работу всех преподавателей первой категории, принятых на работу в текущем году. (+1)
4)	Сведения о ФИО учащихся их отметках, получивших за экзамен отметку выше средней. (+1)



 
-- 1. Создание БД и таблиц
CREATE DATABASE Exams;
GO
USE Exams;
GO

CREATE TABLE Преподаватель (
    табельный_номер INT PRIMARY KEY,
    ФИО VARCHAR(255),
    дата_приема DATE,
    категория VARCHAR(100),
    телефон VARCHAR(20)
);
GO

CREATE TABLE Экзамен (
    номер_направления INT PRIMARY KEY,
    табельный_номер_преподавателя INT,
    ФИО_учащегося VARCHAR(255),
    предмет VARCHAR(100),
    дата_сдачи DATE,
    отметка INT,
    FOREIGN KEY (табельный_номер_преподавателя) REFERENCES Преподаватель(табельный_номер)
    ON DELETE CASCADE ON UPDATE CASCADE
);
GO

-- 2. Вставка данных (обеспечиваем непустые результаты для запросов)
INSERT INTO Преподаватель (табельный_номер, ФИО, дата_приема, категория, телефон) VALUES
(1, 'Иванов И.И.', '2024-03-10', 'первая', '123-45-67'), -- Принят в текущем году, первая категория
(2, 'Петров П.П.', '2023-11-15', 'вторая', '987-65-43'),
(3, 'Сидоров С.С.', '2024-01-20', 'первая', '555-12-34'), -- Принят в текущем году, первая категория
(4, 'Кузнецов К.К.', '2023-05-05', 'высшая', '111-22-33'),
(5, 'Смирнова С.С.', '2023-09-12', 'первая', '444-55-66');

INSERT INTO Экзамен (номер_направления, табельный_номер_преподавателя, ФИО_учащегося, предмет, дата_сдачи, отметка) VALUES
(1, 1, 'Александров А.А.', 'Математика', '2024-05-15', 4), -- Выше среднего
(2, 2, 'Борисов Б.Б.', 'Физика', '2024-05-16', 3),
(3, 3, 'Васильев В.В.', 'Химия', '2024-05-17', 5), -- Выше среднего
(4, 4, 'Григорьев Г.Г.', 'История', '2024-05-18', 4),
(5, 5, 'Дмитриев Д.Д.', 'Литература', '2024-05-19', 3);


-- 3. SQL-запросы

-- 1) ФИО преподавателей, учащихся и отметки в порядке возрастания
SELECT пр.ФИО AS ФИО_преподавателя, э.ФИО_учащегося, э.отметка
FROM Преподаватель пр
JOIN Экзамен э ON пр.табельный_номер = э.табельный_номер_преподавателя
ORDER BY пр.ФИО, э.ФИО_учащегося, э.отметка;


-- 2) ФИО учащегося и средний балл
SELECT ФИО_учащегося, AVG(отметка) AS средний_балл
FROM Экзамен
GROUP BY ФИО_учащегося;


-- 3) Фамилии и даты приема преподавателей первой категории, принятых в текущем году
SELECT ФИО, дата_приема
FROM Преподаватель
WHERE категория = 'первая' AND YEAR(дата_приема) = YEAR(GETDATE())
ORDER BY ФИО;



-- 4) Учащиеся с отметкой выше средней
SELECT ФИО_учащегося, отметка
FROM Экзамен
WHERE отметка > (SELECT AVG(отметка) FROM Экзамен);