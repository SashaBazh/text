Задача 4
1.	Спроектируйте базу данных University для автоматизации учета информации о филиалах учебного заведения.
Учебное заведение имеет несколько филиалов. Для каждого филиала должна храниться следующая информация: 
•	Номер филиала (уникален, содержит только цифры);
•	адрес;
•	дата последнего подтверждения Государственной аккредитации. 
В учебном заведении хранится информация обо всех группах каждого из филиалов:
•	номер филиала, к которому относится группа;
•	Номер группы (имеет уникальное значение);
•	курс;
•	количество учащихся в группе.  
В СУБД MY SQL, используя команды определения данных создать базу данных. Создать таблицы Филиал и Группа, для каждой таблицы определив первичные ключи. Определить в подчиненной таблице внешний ключ. Создать связь между таблицами с помощью внешнего ключа, обеспечив каскадное удаление и обновление данных. (+1)
2.	Используя команды манипулирования данными, добавить в созданные таблицы по пять записей, таких чтобы результаты нижеперечисленных запросов содержали не менее одной записи. (+1)
  
3.	Написать  запросы для получения следующей информации (результаты выполнения запросов не должны быть пустыми):
1)	Выведите адреса и номера всех филиалов, которые подтверждали Государственную аккредитацию в текущем году. (+1)
2)	Выведите номер филиала, адрес филиала и номера групп в которых количество учащихся меньше 30. (+1)
3)	Выберите номера групп и номера филиалов, в которых число учащихся минимальное. (+1)
4)	Выведите для каждого филиала его номер и количество групп первого курса. (+1)

-- 1. Создание БД и таблиц
CREATE DATABASE University;
USE University;

CREATE TABLE Филиал (
    номер INT PRIMARY KEY CHECK (номер REGEXP '^[0-9]+$'),
    адрес VARCHAR(255),
    дата_аккредитации DATE
);

CREATE TABLE Группа (
    номер_группы INT PRIMARY KEY,
    номер_филиала INT,
    курс INT,
    количество_учащихся INT,
    FOREIGN KEY (номер_филиала) REFERENCES Филиал(номер)
    ON DELETE CASCADE ON UPDATE CASCADE
);

-- 2. Вставка данных (обеспечиваем непустые результаты для запросов)
INSERT INTO Филиал (номер, адрес, дата_аккредитации) VALUES
(1, 'ул. Ленина, 1', '2024-05-10'), -- Аккредитация в текущем году
(2, 'пр. Мира, 5', '2022-11-15'),
(3, 'ул. Гагарина, 20', '2024-10-20'), -- Аккредитация в текущем году
(4, 'ул. Пушкина, 7', '2021-01-05'),
(5, 'пр. Ленина, 15', '2024-09-22'); -- Аккредитация в текущем году

INSERT INTO Группа (номер_группы, номер_филиала, курс, количество_учащихся) VALUES
(101, 1, 3, 20), -- Меньше 30, минимальное
(102, 1, 2, 30),
(201, 2, 1, 15), -- Меньше 30, минимальное
(202, 2, 4, 28),
(301, 3, 3, 22), -- Меньше 30
(401, 4, 2, 32),
(402, 4, 1, 35), -- 1 курс
(501, 5, 1, 28); -- Меньше 30, 1 курс


-- 3. SQL-запросы

-- 1) Филиалы с аккредитацией в текущем году
SELECT номер, адрес
FROM Филиал
WHERE YEAR(дата_аккредитации) = YEAR(CURDATE());


-- 2) Филиалы и группы с количеством учащихся меньше 30
SELECT f.номер, f.адрес, g.номер_группы
FROM Филиал f
JOIN Группа g ON f.номер = g.номер_филиала
WHERE g.количество_учащихся < 30;

-- 3) Группы с минимальным числом учащихся
SELECT номер_группы, номер_филиала
FROM Группа
WHERE количество_учащихся = (SELECT MIN(количество_учащихся) FROM Группа);


-- 4) Количество групп 1 курса для каждого филиала
SELECT f.номер, COUNT(g.номер_группы) AS количество_групп_1_курса
FROM Филиал f
LEFT JOIN Группа g ON f.номер = g.номер_филиала AND g.курс = 1
GROUP BY f.номер;