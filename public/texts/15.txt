Задача 15

1.	Спроектируйте  базу данных  Exams для автоматизации учета информации о приеме  экзаменов преподавателями.  Для каждого преподавателя должна храниться информация: 
•	Табельный номер преподавателя (уникален, содержит только цифры);
•	ФИО преподавателя;
•	Дата приема на работу;
•	Категория (первая, вторая, высшая);
Кроме того, хранится информация о приеме экзаменов преподавателями:
•	номер направления на сдачу экзамена (уникален);
•	Преподаватель, который принимал экзамен;
•	ФИО учащегося;
•	сдаваемый предмет;
•	дата сдачи экзамена;
•	оценка.

В СУБД MY SQL, используя команды определения данных создать базу данных.  Создать таблицы Преподаватель и Экзамен, для каждой таблицы определив первичные ключи. Определить в подчиненной таблице внешний ключ. Создать связь между таблицами с помощью внешнего ключа, обеспечив каскадное удаление и обновление данных. (+1)
2.	Используя команды манипулирования данными, добавить в созданные таблицы по пять записей, таких чтобы результаты нижеперечисленных запросов содержали не менее одной записи. (+1)

3.	Используя команды языка SQL, выполнить следующие действия:
1)	Создайте представление Преподаватели1, содержащее информацию о ФИО преподавателя, Категории преподавателя, Предмете и Дате сдачи экзамена.  (+1)
2)	Создайте представление Ученики1, содержащее информацию ФИО учащегося, Предмет и отметки. (+1)
3)	Выберите из представления Преподаватели1 информацию о преподавателях, принимавших экзамен более чем по двум дисциплинам. (+1)
4)	Выберите из представления Ученики1 информацию об учащихся, средний балл которых, выше 7.5.  (+1)

 

-- 1. Создание БД и таблиц
CREATE DATABASE IF NOT EXISTS Exams;
USE Exams;

CREATE TABLE IF NOT EXISTS Преподаватель (
    табельный_номер INT PRIMARY KEY CHECK (табельный_номер REGEXP '^[0-9]+$'),
    ФИО VARCHAR(255),
    дата_приема DATE,
    категория ENUM('первая', 'вторая', 'высшая')
);

CREATE TABLE IF NOT EXISTS Экзамен (
    номер_направления INT PRIMARY KEY,
    табельный_номер_преподавателя INT,
    ФИО_учащегося VARCHAR(255),
    предмет VARCHAR(100),
    дата_сдачи DATE,
    оценка INT,
    FOREIGN KEY (табельный_номер_преподавателя) REFERENCES Преподаватель(табельный_номер)
    ON DELETE CASCADE ON UPDATE CASCADE
);

-- 2. Вставка данных
INSERT INTO Преподаватель VALUES 
(201, 'Соколов И.И.', '2016-07-10', 'высшая'),
(202, 'Кузнецова Л.Л.', '2021-02-15', 'первая');

INSERT INTO Экзамен VALUES 
(4001, 201, 'Студент6', 'Физика', CURDATE(), 4),
(4002, 201, 'Студент7', 'Химия', '2023-10-18', 5),
(4003, 202, 'Студент8', 'Математика', CURDATE(), 3);

-- 3. SQL-запросы
-- 1) Представление Преподаватели1
CREATE VIEW Преподаватели1 AS
SELECT p.ФИО, p.категория, e.предмет, e.дата_сдачи
FROM Преподаватель p
JOIN Экзамен e ON p.табельный_номер = e.табельный_номер_преподавателя;

-- 2) Представление Ученики1
CREATE VIEW Ученики1 AS
SELECT ФИО_учащегося, предмет, оценка FROM Экзамен;

-- 3) Преподаватели с >2 дисциплин
SELECT ФИО 
FROM Преподаватели1 
GROUP BY ФИО 
HAVING COUNT(DISTINCT предмет) > 2;

-- 4) Ученики со средним баллом >7.5
SELECT ФИО_учащегося, AVG(оценка) AS средний_балл 
FROM Ученики1 
GROUP BY ФИО_учащегося 
HAVING средний_балл > 7.5;
