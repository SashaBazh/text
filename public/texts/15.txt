-- 1. Создание БД и таблиц
CREATE DATABASE IF NOT EXISTS Exams;
USE Exams;

CREATE TABLE IF NOT EXISTS Преподаватель (
    табельный_номер INT PRIMARY KEY CHECK (табельный_номер REGEXP '^[0-9]+$'),
    ФИО VARCHAR(255),
    дата_приема DATE,
    категория ENUM('первая', 'вторая', 'высшая')
);

CREATE TABLE IF NOT EXISTS Экзамен (
    номер_направления INT PRIMARY KEY,
    табельный_номер_преподавателя INT,
    ФИО_учащегося VARCHAR(255),
    предмет VARCHAR(100),
    дата_сдачи DATE,
    оценка INT,
    FOREIGN KEY (табельный_номер_преподавателя) REFERENCES Преподаватель(табельный_номер)
    ON DELETE CASCADE ON UPDATE CASCADE
);

-- 2. Вставка данных
INSERT INTO Преподаватель VALUES 
(201, 'Соколов И.И.', '2016-07-10', 'высшая'),
(202, 'Кузнецова Л.Л.', '2021-02-15', 'первая');

INSERT INTO Экзамен VALUES 
(4001, 201, 'Студент6', 'Физика', CURDATE(), 4),
(4002, 201, 'Студент7', 'Химия', '2023-10-18', 5),
(4003, 202, 'Студент8', 'Математика', CURDATE(), 3);

-- 3. SQL-запросы
-- 1) Представление Преподаватели1
CREATE VIEW Преподаватели1 AS
SELECT p.ФИО, p.категория, e.предмет, e.дата_сдачи
FROM Преподаватель p
JOIN Экзамен e ON p.табельный_номер = e.табельный_номер_преподавателя;

-- 2) Представление Ученики1
CREATE VIEW Ученики1 AS
SELECT ФИО_учащегося, предмет, оценка FROM Экзамен;

-- 3) Преподаватели с >2 дисциплин
SELECT ФИО 
FROM Преподаватели1 
GROUP BY ФИО 
HAVING COUNT(DISTINCT предмет) > 2;

-- 4) Ученики со средним баллом >7.5
SELECT ФИО_учащегося, AVG(оценка) AS средний_балл 
FROM Ученики1 
GROUP BY ФИО_учащегося 
HAVING средний_балл > 7.5;
