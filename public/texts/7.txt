Задача 7
1.	Спроектируйте  базу данных  Exams для автоматизации учета информации о приеме  экзаменов преподавателями.  Для каждого преподавателя должна храниться информация: 
•	Табельный номер преподавателя (уникален, содержит только цифры);
•	ФИО преподавателя;
•	Дата приема на работу;
•	Категория (первая, вторая, высшая);

Кроме того, хранится информация о приеме экзаменов преподавателями:
•	номер направления на сдачу экзамена (уникален, может содержать цифры и буквы латинского алфавита)
•	преподаватель, который принимал экзамен;
•	ФИО учащегося;
•	сдаваемый предмет;
•	дата сдачи экзамена;
•	оценка.

В СУБД MY SQL, используя команды определения данных создать базу данных. Создать таблицы Преподаватель и Экзамен, для каждой таблицы определив первичные ключи. Определить в подчиненной таблице внешний ключ. Создать связь между таблицами с помощью внешнего ключа, обеспечив каскадное удаление и обновление данных. (+1)
2.	Используя команды манипулирования данными, добавить в созданные таблицы по пять записей, таких чтобы результаты нижеперечисленных запросов содержали не менее одной записи. (+1)
  
3.	Написать  запросы для получения следующей информации (результаты выполнения запросов не должны быть пустыми):
1)	Выведите без повторений, названия всех предметов, по которым сдавалсь экзамены. (+1)
2)	Выберите ФИО преподавателей, принятых на работу последними. (+1)
3)	Выведите  ФИО учащегося и средний балл по всем предметам, которые он сдавал.  (+1)
4)	Выведите даты сдачи экзаменов, фамилии учеников сдававших экзамен и фамилии преподавателей  принимавших экзамен. (+1) 

-- 1. Создание БД и таблиц
CREATE DATABASE Exams;
USE Exams;

CREATE TABLE Преподаватель (
    табельный_номер INT PRIMARY KEY CHECK (табельный_номер REGEXP '^[0-9]+$'),
    ФИО VARCHAR(255),
    дата_приема DATE,
    категория ENUM('первая', 'вторая', 'высшая')
);

CREATE TABLE Экзамен (
    номер_направления VARCHAR(255) PRIMARY KEY,  -- Может содержать буквы и цифры
    табельный_номер_преподавателя INT,
    ФИО_учащегося VARCHAR(255),
    предмет VARCHAR(100),
    дата_сдачи DATE,
    оценка INT,
    FOREIGN KEY (табельный_номер_преподавателя) REFERENCES Преподаватель(табельный_номер)
    ON DELETE CASCADE ON UPDATE CASCADE
);


-- 2. Вставка данных (обеспечиваем непустые результаты для запросов)
INSERT INTO Преподаватель (табельный_номер, ФИО, дата_приема, категория) VALUES
(1, 'Иванов И.И.', '2024-03-10', 'высшая'),
(2, 'Петров П.П.', '2024-05-15', 'вторая'), -- Последний принятый
(3, 'Сидоров С.С.', '2024-01-20', 'высшая'),
(4, 'Кузнецов К.К.', '2024-05-15', 'высшая'), -- Последний принятый
(5, 'Смирнова С.С.', '2023-09-12', 'первая');


INSERT INTO Экзамен (номер_направления, табельный_номер_преподавателя, ФИО_учащегося, предмет, дата_сдачи, оценка) VALUES
('A101', 1, 'Александров А.А.', 'Математика', '2024-05-15', 4),
('B202', 2, 'Борисов Б.Б.', 'Физика', '2024-05-16', 3),
('C303', 3, 'Васильев В.В.', 'Химия', '2024-05-17', 5),
('D404', 4, 'Григорьев Г.Г.', 'Математика', '2024-05-18', 4),
('E505', 5, 'Дмитриев Д.Д.', 'Физика', '2024-05-19', 3);



-- 3. SQL-запросы

-- 1) Названия предметов (без повторений)
SELECT DISTINCT предмет
FROM Экзамен;


-- 2) Преподаватели, принятые на работу последними
SELECT ФИО
FROM Преподаватель
WHERE дата_приема = (SELECT MAX(дата_приема) FROM Преподаватель);

-- 3) ФИО учащегося и средний балл
SELECT ФИО_учащегося, AVG(оценка) AS средний_балл
FROM Экзамен
GROUP BY ФИО_учащегося;


-- 4) Даты сдачи, ФИО учащихся и преподавателей
SELECT e.дата_сдачи, e.ФИО_учащегося, p.ФИО AS ФИО_преподавателя
FROM Экзамен e
JOIN Преподаватель p ON e.табельный_номер_преподавателя = p.табельный_номер;