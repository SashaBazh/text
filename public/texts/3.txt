Задача 3
1.	Спроектируйте базу данных Supply для автоматизации учета информации о поступлении товара в магазин. 
Для каждого товара должна храниться информация: 
•	Артикул товара (уникален, содержит только цифры);
•	название товара;
•	категория товара;

Кроме того, хранится информация обо всех поставках товаров. Каждая поставка товара сопровождается товарной накладной:
•	поставляемый товар;
•	номер накладной (уникален);
•	цена за единицу товара; 
•	количество товара;
•	дата окончания срока годности;
•	дата поступления товара;
•	допустимый процент брака. 

В СУБД MY SQL, используя команды определения данных создать базу данных.  Создать таблицы Товар и Поставка, для каждой таблицы определив первичные ключи. Определить в подчиненной таблице внешний ключ. Создать связь между таблицами с помощью внешнего ключа, обеспечив каскадное удаление и обновление данных. (+1)
2.	Используя команды манипулирования данными, добавить в созданные таблицы по пять записей, таких чтобы результаты нижеперечисленных запросов содержали не менее одной записи. (+1)
  
3.	Написать  запросы для получения следующей информации (результаты выполнения запросов не должны быть пустыми):
1)	Название и категорию товаров с ценой больше 100р и меньше 500р в порядке возрастания даты их поступления. (+1)
2)	Стоимость товара в каждой поставке,  рачитывается следующим образом: «Стоимость» = «количество товара» * «цена за единицу товара». (+1)
3)	Названия товаров у которых допустимый процент брака меньше 10%.  (+1)
4)	Количество товара каждой категории. (+1) 

-- 1. Создание БД и таблиц
CREATE DATABASE Supply;
USE Supply;

CREATE TABLE Товар (
    артикул INT PRIMARY KEY CHECK (артикул REGEXP '^[0-9]+$'),
    название VARCHAR(255),
    категория VARCHAR(100)
);

CREATE TABLE Поставка (
    номер_накладной INT PRIMARY KEY,
    артикул_товара INT,
    цена DECIMAL(10, 2),
    количество INT,
    дата_окончания_срока_годности DATE,
    дата_поступления DATE,
    допустимый_процент_брака DECIMAL(5, 2),
    FOREIGN KEY (артикул_товара) REFERENCES Товар(артикул)
    ON DELETE CASCADE ON UPDATE CASCADE
);

-- 2. Вставка данных (обеспечиваем непустые результаты для запросов)
INSERT INTO Товар (артикул, название, категория) VALUES
(1, 'Ноутбук', 'Электроника'),
(2, 'Стул', 'Мебель'),
(3, 'Книга', 'Канцелярия'),
(4, 'Телефон', 'Электроника'),
(5, 'Ручка', 'Канцелярия');

INSERT INTO Поставка (номер_накладной, артикул_товара, цена, количество, дата_окончания_срока_годности, дата_поступления, допустимый_процент_брака) VALUES
(1, 1, 200.00, 2, '2025-01-15', '2024-01-15', 5.00), -- Цена между 100 и 500, брак  10%
(2, 2, 600.00, 5, '2025-01-15', '2024-01-16', 12.00),
(3, 3, 300.00, 1, '2025-01-17', '2024-01-17', 8.00), -- Цена между 100 и 500, брак  10%
(4, 4, 450.50, 3, '2025-01-18', '2024-01-18', 15.00), -- Цена между 100 и 500
(5, 5, 150.70, 5, '2025-01-19', '2024-01-19', 2.00); -- Цена между 100 и 500, брак  10%


-- 3. SQL-запросы

-- 1) Название и категория товаров с ценой от 100 до 500 (в порядке возрастания даты)
SELECT t.название, t.категория
FROM Товар t
JOIN Поставка p ON t.артикул = p.артикул_товара
WHERE p.цена BETWEEN 100 AND 500
ORDER BY p.дата_поступления;

-- 2) Стоимость товара в каждой поставке
SELECT номер_накладной, количество  цена AS Стоимость
FROM Поставка;

-- 3) Названия товаров с браком меньше 10%
SELECT t.название
FROM Товар t
JOIN Поставка p ON t.артикул = p.артикул_товара
WHERE p.допустимый_процент_брака  10;

-- 4) Количество товара каждой категории
SELECT t.категория, SUM(p.количество) AS Количество
FROM Товар t
JOIN Поставка p ON t.артикул = p.артикул_товара
GROUP BY t.категория;