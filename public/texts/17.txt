Задача 17
1.	Спроектируйте  базу данных  Exam для автоматизации учета информации о приеме  экзаменов преподавателями.  Для каждого преподавателя должна храниться информация: 
•	Табельный номер преподавателя (уникален, содержит только цифры);
•	ФИО преподавателя;
•	Дата приема на работу;
•	Категория (первая, вторая, высшая);
Кроме того, хранится информация о приеме экзаменов преподавателями:
•	номер направления на сдачу экзамена (уникален)
•	преподаватель, который принимал экзамен;
•	ФИО учащегося;
•	сдаваемый предмет;
•	дата сдачи экзамена;
•	оценка.

В СУБД MY SQL, используя команды определения данных создать базу данных.  Создать таблицы Преподаватель и Экзамен, для каждой таблицы определив первичные ключи. Определить в подчиненной таблице внешний ключ. Создать связь между таблицами с помощью внешнего ключа, обеспечив каскадное удаление и обновление данных. (+1)
2.	Используя команды манипулирования данными, добавить в созданные таблицы по пять записей, таких чтобы результаты нижеперечисленных запросов содержали не менее одной записи. (+1)
  
3.	Используя команды языка SQL, выполнить следующие действия:
1)	 Написать  запросы для получения следующей информации (результаты выполнения запросов не должны быть пустыми): Выведите ФИО и дату приема на работу преподавателей, принимавших экзамены весной. (+1)
2)	Написать хранимую процедуру вычисляющую, для заданного преподавателя общее количество учащихся у которых он принимал экзамены. Номер преподавателя передается в процедуру в качестве параметра. (+2)
3)	Продемонстрировать вызов процедуры и проссмотр результата ее работы. (+1)


-- 1. Создание БД и таблиц
CREATE DATABASE IF NOT EXISTS Exam;
USE Exam;

CREATE TABLE IF NOT EXISTS Преподаватель (
    табельный_номер INT PRIMARY KEY CHECK (табельный_номер REGEXP '^[0-9]+$'),
    ФИО VARCHAR(255),
    дата_приема DATE,
    категория ENUM('первая', 'вторая', 'высшая')
);

CREATE TABLE IF NOT EXISTS Экзамен (
    номер_направления INT PRIMARY KEY,
    табельный_номер_преподавателя INT,
    ФИО_учащегося VARCHAR(255),
    предмет VARCHAR(100),
    дата_сдачи DATE,
    оценка INT,
    FOREIGN KEY (табельный_номер_преподавателя) REFERENCES Преподаватель(табельный_номер)
    ON DELETE CASCADE ON UPDATE CASCADE
);

-- 2. Вставка данных
INSERT INTO Преподаватель VALUES 
(301, 'Васильев К.К.', '2017-08-12', 'высшая'),
(302, 'Николаева М.М.', '2020-04-05', 'первая');

INSERT INTO Экзамен VALUES 
(5001, 301, 'Студент9', 'История', '2023-03-15', 4),
(5002, 301, 'Студент10', 'Литература', '2023-04-20', 5);

-- 3. SQL-запросы
-- 1) Преподаватели, принимавшие экзамены весной
SELECT ФИО, дата_приема 
FROM Преподаватель 
WHERE табельный_номер IN (
    SELECT табельный_номер_преподавателя 
    FROM Экзамен 
    WHERE MONTH(дата_сдачи) BETWEEN 3 AND 5
);

-- 2) Хранимая процедура
DELIMITER $$
CREATE PROCEDURE УченикиПреподавателя(IN преподаватель_id INT)
BEGIN
    SELECT COUNT(DISTINCT ФИО_учащегося) AS количество_учеников 
    FROM Экзамен 
    WHERE табельный_номер_преподавателя = преподаватель_id;
END $$
DELIMITER ;

-- 3) Вызов процедуры
CALL УченикиПреподавателя(301);
