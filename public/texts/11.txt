
Задача 11
1.	Спроектируйте базу данных Sale для автоматизации учета информации о продажах товаров в магазине. 
Для каждого товара должна храниться информация: 
•	артикул товара (уникален, содержит только цифры);
•	название товара;
•	категория товара;
•	количество товара на складе. 

Кроме того, хранится информация обо всех продажах товаров. Каждая продажа товара сопровождается товарным чеком:
•	товар;
•	номер чека (уникален);
•	количество проданного товара;
•	дата продажи товара.

В СУБД MY SQL, используя команды определения данных создать базу данных.  Создать таблицы Товар и Продажа, для каждой таблицы определив первичные ключи. Определить в подчиненной таблице внешний ключ. Создать связь между таблицами с помощью внешнего ключа, обеспечив каскадное удаление и обновление данных. (+1)
2.	Используя команды манипулирования данными, добавить в созданные таблицы по пять записей, таких чтобы результаты нижеперечисленных запросов содержали не менее одной записи. (+1)

3.	Используя команды языка SQL, выполнить следующие действия:
1)	Создайте представление Товары1, содержащее информацию об артикуле товара, названии товара и количестве проданного товара. (+1)
2)	Создайте представление Продажи1, содержащее информацию о названии товара, дате продажи и количестве проданного товара. (+1)
3)	Выберите из представления Продажи1 информацию об общем количестве товаров, проданных сегодня. (+1)
4)	Выберите из представления Товары1 всю информацию о товарах, которых продано максимальное количество.  (+1)

-- 1. Создание БД и таблиц
CREATE DATABASE IF NOT EXISTS Sale;
USE Sale;

CREATE TABLE IF NOT EXISTS Товар (
    артикул INT PRIMARY KEY CHECK (артикул REGEXP '^[0-9]+$'),
    название VARCHAR(255) NOT NULL,
    категория VARCHAR(100),
    количество_на_складе INT
);

CREATE TABLE IF NOT EXISTS Продажа (
    номер_чека INT PRIMARY KEY,
    артикул_товара INT,
    количество INT,
    дата_продажи DATE,
    FOREIGN KEY (артикул_товара) REFERENCES Товар(артикул)
    ON DELETE CASCADE ON UPDATE CASCADE
);

-- 2. Вставка данных (пример)
INSERT INTO Товар VALUES 
(1001, 'Ноутбук', 'Электроника', 10),
(1002, 'Стул', 'Мебель', 20),
(1003, 'Книга', 'Канцелярия', 50),
(1004, 'Телефон', 'Электроника', 15),
(1005, 'Стол', 'Мебель', 8);

INSERT INTO Продажа VALUES 
(2001, 1001, 2, CURDATE()),
(2002, 1002, 5, '2023-10-15'),
(2003, 1003, 10, CURDATE()),
(2004, 1004, 1, '2023-09-20'),
(2005, 1005, 3, CURDATE());

-- 3. SQL-запросы
-- 1) Представление Товары1
CREATE VIEW Товары1 AS
SELECT t.артикул, t.название, SUM(p.количество) AS проданное_количество
FROM Товар t
LEFT JOIN Продажа p ON t.артикул = p.артикул_товара
GROUP BY t.артикул;

-- 2) Представление Продажи1
CREATE VIEW Продажи1 AS
SELECT t.название, p.дата_продажи, p.количество
FROM Продажа p
JOIN Товар t ON p.артикул_товара = t.артикул;

-- 3) Общее количество за сегодня
SELECT SUM(количество) AS сегодняшние_продажи 
FROM Продажи1 
WHERE дата_продажи = CURDATE();

-- 4) Товары с максимальными продажами
SELECT * FROM Товары1 
WHERE проданное_количество = (SELECT MAX(проданное_количество) FROM Товары1);

