Задача 1
1.	Спроектируйте базу данных University для автоматизации учета информации о филиалах учебного заведения. 
Учебное заведение имеет несколько филиалов. Для каждого филиала должна храниться следующая информация: 
•	Номер филиала (уникален, состоит только из цифр);
•	адрес;
•	ФИО руководителя;
•	дата последнего подтверждения Государственной аккредитации.
В учебном заведении хранится информация обо всех группах каждого из филиалов:
•	номер филиала, к которому относится группа;
•	номер группы (имеет уникальное значение);
•	курс;
•	фамилия куратора;
•	название специальности;
•	количество учащихся в группе.  
В СУБД MY SQL, используя команды определения данных создать базу данных. Создать таблицы Филиал и Группа, для каждой таблицы определив первичные ключи. Определить в подчиненной таблице внешний ключ. Создать связь между таблицами с помощью внешнего ключа, обеспечив каскадное удаление и обновление данных. (+1)
2.	Используя команды манипулирования данными, добавить в созданные таблицы по пять записей, таких чтобы результаты нижеперечисленных запросов содержали не менее одной записи. (+1) 
3.	Написать  запросы для получения следующей информации (результаты выполнения запросов не должны быть пустыми):
1)	Адреса, номера  филиалов и дату последнего подтверждения государственной аккредитации для всех филиалов, которые подтверждали Государственную аккредитацию в текущем году. (+1)
2)	Сведения о номерах филиалов (в порядке возрастания номеров), адресах филиалов и  группах специальности ПОИТ. (+1) 
3)	Сведения о номерах филиалов и количестве групп каждого филиала. (+1)
4)	Номера групп с минимальным количеством учащихся. (+1)

-- 1. Создание базы данных и таблиц
CREATE DATABASE IF NOT EXISTS University;
USE University;

-- Создание таблицы Филиал
CREATE TABLE IF NOT EXISTS Филиал (
    номер INT PRIMARY KEY CHECK (номер REGEXP '^[0-9]+$'),
    адрес VARCHAR(255) NOT NULL,
    ФИО_руководителя VARCHAR(255) NOT NULL,
    дата_аккредитации DATE NOT NULL
);

-- Создание таблицы Группа
CREATE TABLE IF NOT EXISTS Группа (
    номер_группы INT PRIMARY KEY,
    номер_филиала INT,
    курс INT NOT NULL,
    фамилия_куратора VARCHAR(255) NOT NULL,
    название_специальности VARCHAR(255) NOT NULL,
    количество_учащихся INT NOT NULL,
    FOREIGN KEY (номер_филиала) REFERENCES Филиал(номер)
    ON DELETE CASCADE ON UPDATE CASCADE
);

-- 2. Вставка данных в таблицы
-- Вставка данных в таблицу Филиал
INSERT INTO Филиал (номер, адрес, ФИО_руководителя, дата_аккредитации) VALUES
(1, 'ул. Ленина, 10', 'Иванов И.И.', '2023-05-15'),
(2, 'пр. Мира, 5', 'Петров П.П.', '2023-06-20'),
(3, 'ул. Гагарина, 20', 'Сидоров С.С.', '2022-12-10'),
(4, 'ул. Пушкина, 7', 'Козлова К.К.', '2023-03-25'),
(5, 'пр. Ленина, 15', 'Смирнов С.С.', '2023-07-30');

-- Вставка данных в таблицу Группа
INSERT INTO Группа (номер_группы, номер_филиала, курс, фамилия_куратора, название_специальности, количество_учащихся) VALUES
(101, 1, 1, 'Иванова', 'ПОИТ', 25),
(102, 1, 2, 'Петрова', 'ПОИТ', 30),
(201, 2, 1, 'Сидорова', 'ИСиТ', 20),
(202, 2, 3, 'Козлова', 'ПОИТ', 28),
(301, 3, 2, 'Смирнова', 'ИСиТ', 22);

-- 3. SQL-запросы
-- 1) Адреса, номера филиалов и дату последнего подтверждения государственной аккредитации для всех филиалов, которые подтверждали Государственную аккредитацию в текущем году.
SELECT адрес, номер, дата_аккредитации
FROM Филиал
WHERE YEAR(дата_аккредитации) = YEAR(CURDATE());

-- 2) Сведения о номерах филиалов (в порядке возрастания номеров), адресах филиалов и группах специальности ПОИТ.
SELECT f.номер, f.адрес, g.номер_группы, g.название_специальности
FROM Филиал f
JOIN Группа g ON f.номер = g.номер_филиала
WHERE g.название_специальности = 'ПОИТ'
ORDER BY f.номер ASC;

-- 3) Сведения о номерах филиалов и количестве групп каждого филиала.
SELECT f.номер, COUNT(g.номер_группы) AS количество_групп
FROM Филиал f
LEFT JOIN Группа g ON f.номер = g.номер_филиала
GROUP BY f.номер;

-- 4) Номера групп с минимальным количеством учащихся.
SELECT номер_группы
FROM Группа
WHERE количество_учащихся = (SELECT MIN(количество_учащихся) FROM Группа);