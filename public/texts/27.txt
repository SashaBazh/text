Задача 27
1.	Спроектируйте базу данных Sale для автоматизации учета информации о продажах товаров в магазине.
Для каждого товара должна храниться информация: 
•	артикул товара (уникален, содержит только цифры);
•	название товара;
•	категория товара;
•	количество на складе.
Кроме того, хранится информация обо всех продажах товаров:
•	номер продажи (уникален);
•	проданный товар;
•	количество проданного товара;
•	дата продажи товара;

В СУБД  MS SQL SERVER,  используя команды определения данных создать базу данных.  Создать таблицы Товар и Продажи, для каждой таблицы определив первичные ключи. Определить в подчиненной таблице внешний ключ. Создать связь между таблицами с помощью внешнего ключа, обеспечив каскадное удаление и обновление данных. (+1)
2.	Используя команды манипулирования данными, добавить в созданные таблицы по пять записей, таких чтобы результаты нижеперечисленных запросов содержали не менее одной записи. (+1)
  
3.	Используя команды языка SQL, выполнить следующие действия:

1)	 Написать  запросы для получения следующей информации (результаты выполнения запросов не должны быть пустыми): Выведите Название и категорию товаров, проданных летом текущего года. (+1)
2)	Написать хранимую процедуру, вычисляющую максимальное количество товара, которое было проданно в одной продаже. Артикул товара передается в процедуру в качестве параметра. (+2)
3)	Продемонстрировать вызов процедуры и проссмотр результата ее работы. (+1)
 

-- 1. Создание БД и таблиц
CREATE DATABASE Sale;
GO
USE Sale;
GO

CREATE TABLE Товар (
    артикул INT PRIMARY KEY CHECK (артикул LIKE '[0-9]%'),
    название VARCHAR(255),
    категория VARCHAR(100),
    количество_на_складе INT
);
GO

CREATE TABLE Продажи (
    номер_продажи INT PRIMARY KEY,
    артикул_товара INT,
    количество INT,
    дата_продажи DATE,
    FOREIGN KEY (артикул_товара) REFERENCES Товар(артикул)
    ON DELETE CASCADE ON UPDATE CASCADE
);
GO

-- 2. Вставка данных (обеспечиваем данные для летних продаж)
INSERT INTO Товар (артикул, название, категория, количество_на_складе) VALUES
(1001, 'Ноутбук', 'Электроника', 10),
(1002, 'Стул', 'Мебель', 20),
(1003, 'Книга', 'Канцелярия', 50),
(1004, 'Телефон', 'Электроника', 15),
(1005, 'Стол', 'Мебель', 8);

-- Продажи летом текущего года (для проверки запроса)
DECLARE @CurrentYear INT = YEAR(GETDATE());
INSERT INTO Продажи (номер_продажи, артикул_товара, количество, дата_продажи) VALUES
(1, 1001, 2, CONCAT(@CurrentYear, '-06-15')), 
(2, 1002, 5, CONCAT(@CurrentYear, '-07-15')),
(3, 1003, 1, CONCAT(@CurrentYear, '-08-16')),
(4, 1004, 3, '2024-01-15'), -- Не летом
(5, 1005, 3, '2024-01-16'); -- Не летом



-- 3. SQL-запросы

-- 1) Название и категория товаров, проданных летом текущего года
SELECT t.название, t.категория
FROM Товар t
JOIN Продажи p ON t.артикул = p.артикул_товара
WHERE MONTH(p.дата_продажи) BETWEEN 6 AND 8 AND YEAR(p.дата_продажи) = YEAR(GETDATE());




-- 2) Хранимая процедура для максимального количества проданного товара
GO
CREATE PROCEDURE MaxSoldQuantity (@артикул INT)
AS
BEGIN
    SELECT MAX(количество) AS максимальное_количество
    FROM Продажи
    WHERE артикул_товара = @артикул;
END;
GO


-- 3) Вызов процедуры и вывод результата
EXEC MaxSoldQuantity @артикул = 1001; -- Для ноутбука
EXEC MaxSoldQuantity @артикул = 1002; -- Для стула