Задача 10
1.	Спроектируйте базу данных University для автоматизации учета информации о филиалах учебного заведения.  
Учебное заведение имеет несколько филиалов. Для каждого филиала должна храниться следующая информация: 
•	номер филиала (уникален, содержит только цифры);
•	адрес;
•	дата последнего подтверждения государственной аккредитации. 
В учебном заведении хранится информация обо всех группах каждого из филиалов:
•	номер филиала, к которому относится группа;
•	номер группы (уникален);
•	курс;
•	количество учащихся в группе.  
В СУБД MY SQL, используя команды определения данных создать базу данных.  Создать таблицы Филиал и Группа, для каждой таблицы определив первичные ключи. Определить в подчиненной таблице внешний ключ. Создать связь между таблицами с помощью внешнего ключа, обеспечив каскадное удаление и обновление данных. (+1)
2.	Используя команды манипулирования данными, добавить в созданные таблицы по пять записей, таких чтобы результаты нижеперечисленных запросов содержали не менее одной записи. (+1)
  
3.	Используя команды языка SQL, выполнить следующие действия:
1)	Создайте представление Группы1, содержащее информацию о номере группы, адресе филиала, курсе и количестве учащихся. (+1)
2)	Создайте представление Филиалы1, содержащее информацию о номере, адресе филиала и общем количестве учащихся в них. (+1)
3)	Выберите из представления Группы1 всю информацию о филиалах и группах первого курса. (+1)
4)	Выберите из представления Филиалы1 всю информацию о филиалах с максимальным количеством учащихся. (+1)

-- 1. Создание БД и таблиц
CREATE DATABASE University;
USE University;

CREATE TABLE Филиал (
    номер INT PRIMARY KEY CHECK (номер REGEXP '^[0-9]+$'),
    адрес VARCHAR(255),
    дата_аккредитации DATE
);

CREATE TABLE Группа (
    номер_группы INT PRIMARY KEY,
    номер_филиала INT,
    курс INT,
    количество_учащихся INT,
    FOREIGN KEY (номер_филиала) REFERENCES Филиал(номер)
    ON DELETE CASCADE ON UPDATE CASCADE
);


-- 2. Вставка данных (обеспечиваем непустые результаты для запросов)
INSERT INTO Филиал (номер, адрес, дата_аккредитации) VALUES
(1, 'ул. Ленина, 1', '2024-05-10'),
(2, 'пр. Мира, 5', '2023-11-15'),
(3, 'ул. Гагарина, 20', '2024-10-20'),
(4, 'ул. Пушкина, 7', '2021-01-05'),
(5, 'пр. Ленина, 15', '2024-09-22');

INSERT INTO Группа (номер_группы, номер_филиала, курс, количество_учащихся) VALUES
(101, 1, 1, 20), -- 1 курс
(102, 1, 2, 30),
(201, 2, 1, 15), -- 1 курс
(202, 2, 4, 28),
(301, 3, 3, 220), -- Максимальное количество учащихся
(401, 4, 2, 32),
(402, 4, 1, 35), -- 1 курс
(501, 5, 3, 220); -- Максимальное количество учащихся


-- 3. SQL-запросы

-- 1) Представление Группы1
CREATE VIEW Группы1 AS
SELECT g.номер_группы, f.адрес, g.курс, g.количество_учащихся
FROM Группа g
JOIN Филиал f ON g.номер_филиала = f.номер;


-- 2) Представление Филиалы1
CREATE VIEW Филиалы1 AS
SELECT f.номер, f.адрес, SUM(g.количество_учащихся) AS общее_количество_учащихся
FROM Филиал f
LEFT JOIN Группа g ON f.номер = g.номер_филиала
GROUP BY f.номер, f.адрес;


-- 3) Информация о филиалах и группах 1 курса из представления Группы1
SELECT *
FROM Группы1
WHERE курс = 1;



-- 4) Филиалы с максимальным количеством учащихся из представления Филиалы1
SELECT *
FROM Филиалы1
WHERE общее_количество_учащихся = (SELECT MAX(общее_количество_учащихся) FROM Филиалы1);